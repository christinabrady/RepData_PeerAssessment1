data(wage)
summary(wage)
data(Wage)
summary(Wage)
inTrain <- createDataPartition(y=Wage$wage, p=0.7, list=FALSE)
training <- Wage[inTrain, ]
testing <- Wage[-inTrain, ]
dim(training); dim(testing)
featurePlot(x=training[, c("age", "education", "jobclass")], y=training$wage, plot="pairs")
qplot(age, wage, data=training)
qplot(age, wage, colour=jobclass, data=training)
qq <- qplot(age, wage, colour=education, data=training)
qq +geom_smooth(method='lm', formula=y~x)
cutWage <- cut2(training$wage, g=3)
library(Hmisc)
cutWage <- cut2(training$wage, g=3)
table(cutWage)
p1 <- qplot(cutWage, age, data=training, fill=cutWage, geom=c("boxplot")
)
p1
p2 <- qplot(cutWage, age, data=training, fill=cutWage, geom=c("boxplot", "jitter")
)
grid.arrange(p1,p2, ncol=2)
plot(wage, colour=education, data=training, geom="density")
qplot(wage, colour=education, data=training, geom="density")
names(gss)
summary(gss.12)
summary(gss12)
nrow(gss12)
interest <- c("age", "sex", "race", "hispanic", "educ", "siblings", "coninc", "region", "religion", "attend", "class", "union", "tvhours", "helppoor")
gssint <- gss12[, names(gss12) %in% interest]
names(gssint)
summary(gssint)
gssint <- omit.na(gssint)
gssint <- na.omit(gssint)
summary(gssint)
gssint <- gss12[, names(gss12) %in% interest]
str(gssint)
?na.omit
View(gssint)
?featurePlot
featurePlot(gssint, "scatter")
featurePlot(x=gssint, y=gssint$helppoor, plot="pairs")
interest <- c("age", "sex", "race", "hispanic", "educ", "coninc", "religion", "class", "union", "tvhours", "helppoor")
gssint <- gss12[, names(gss12) %in% interest]
getahead <- c("getahead", "coninc", "educ", "tvhours", "sex")
gssahead <- gss12[, names(gss12) %in% getahead]
summary(gssahead)
featurePlot(x=gssahead, y=gssahead$getahead, plot="pairs")
mosaicplot(gss12$educ, gss12$getahead)
mosaicplot(table(gss12$educ, gss12$getahead))
head(gss12$coninc)
plot(gss12$getahead~gss12$coininc)
plot(gss12$getahead,gss12$coininc)
mosaicplot(table(gss12$class, gss12$getahead))
mosaicplot(table(gss12$sex, gss12$getahead))
upper <- gss12[, class=="upper"]
upper <- gss12[, gss12$class=="upper"]
upper <- subset(gss12, gss12$class=="upper")
summary(upper)
upper2 <- upper[, c("age", "coninc", "educ")]
summary(upper2)
str(gss12$class)
names(gss12$class)
summary(gss12$class)
upper <- subset(gss12, gss12$class=="Upper Class")
upper2 <- upper[, c("age", "coninc", "educ")]
summary(upper2)
table(upper2~.)
table(upper2)
summary(upper2)
nrow(upper2)
nrow(gss12)
summary(gss12$coninc)
table(gss12$coninc)
table(gss12$class)
prop.table(gss12$class)
prop.table(gss12$class,1)
prop.table(table(gss12$class,1))
prop.table(table(gss12$class))
table(upper2$degree)
summary(upper2$degree)
table(upper2$educ)
with(gss12, table(degee~paeduc+maeduc))
with(gss12, tapply(table(degee~paeduc+maeduc))
)
with(gss12, tapply(degree, table(paeduc, maeduc))
)
with(gss12, table(degree, paeduc))
hist(gss12$paeduc)
hist(gss12$paeduc, bins=20)
?hist()
hist(gss12$paeduc, breaks=20)
hist(gss12$educ, breaks=20)
hist(gss12$maeduc, breaks=20)
mosaicplot(table(gss12$class, gss12$degree))
x <- <- c("age", "sex", "race", "hispanic", "educ", "coninc", "religion", "class", "union", "getahead")
x <- c("age", "sex", "race", "hispanic", "educ", "coninc", "religion", "class", "union", "getahead")
gssx <- gss12[, names(gss12) %in% x]
gsstrain <- createDataPartition(y=gssx$getahead, p=.7, list=FALSE)
gsslit <- createDataPartition(y=gssx$getahead, p=.7, list=FALSE)
gsstrain <- gssx[gsslit]
gsstest <- gssx[-gsslit]
summary(gsstrain)
summary(gssx)
library(caTools)
sample.split(gssx$getahead, SplitRation=.7)
sample.split(gssx$getahead, SplitRatio=.7)
split <- sample.split(gssx$getahead, SplitRatio=.7)
gssxtrain <- subset(gssx, split=TRUE)
gssxtest <- subset(gssx, split=FALSE)
gssxtrain <- subset(split, split=TRUE)
gssxtrain <- subset(split, split==TRUE)
str(gssx)
inTrain <- createDataPartition(y=gssx$getahead, p=.7, list=FALSE)
gssxtrain <- gssx[inTrain]
gssxtest <- gssx[-inTrain]
dim(gssxtrain)
gssxtrain <- gssx[inTrain,]
gssxtest <- gssx[-inTrain,]
summary(gssxtrain)
gsslm1 <- lm(getahead~., gssxtrain)
str(gssxtrain)
summary(gsslm1)
gsslm1 <- lm(getahead~age, gssxtrain)
gssxtrain$getahead <- as.character(gssxtrain$getahead)
gsslm1 <- lm(getahead~age, gssxtrain)
summary(gssxtrain$getahead)
summary(gssxtrain$age)
summary(faithful)
View(gssxtrain)
lm(getahead~age, data=gssxtrain)
lm(getahead=="Hard Work"~age, data=gssxtrain)
lm(getahead=="Hard Work"~., data=gssxtrain)
gsslm1 <- lm(getahead=="Hard Work"~., data=gssxtrain)
summary(gsslm1)
gsslm2 <- lm(getahead=="Hard Work"~educ, gssxtrain)
summary(gsslm2)
gsslm2 <- lm(getahead=="Hard Work"~union, gssxtrain)
summary(gsslm2)
gsslm3 <- lm(getahead=="Hard Work"~coninc, gssxtrain)
summary(gsslm3)
inc <- lm(coninc~educ, data=gss12)
summary(inc)
mgg6 <- lm(mpg~., data=mtcars)
summary(mgg6)
library(ggplot2)
?ggplot
g <- ggplot(mtcars, aes(x=am, y=mpg))+geom_boxplot()
g
g <- ggplot(mtcars, aes(x=am, y=factor(mpg)))+geom_boxplot()
g
g <- ggplot(mtcars, aes(x=factor(am), y=mpg))+geom_boxplot()
g
colnames(mtcars)
head(mtcars$am)
mtcars[mtcars$am==1] <- "automatic"
mtcars$am[mtcars$am==1] <- "automatic"
mtcars$am[mtcars$am==0] <- "manual"
summary(mtcars$am)
table(mtcars$am)
g <- g + xlab("mpg") + ylab("Transmission type")
g
g <- g + labs(x="Transmission Type", y="mpg", title="Plot A")
g
with(mtcars, plot(mpg, wt))
g2 <- ggplot(mtcars, aes(x=mpg, y=wt)+geom_point(color=factor(am)) +labs(x="mpg"", y="weight"", title = "Plot B")
g2 <- ggplot(mtcars, aes(x=mpg, y=wt)+geom_point(color=factor(am)) +labs(x="mpg", y="weight", title = "Plot B")
g2 <- ggplot(mtcars, aes(x=mpg, y=wt))+geom_point(color=factor(am)) +labs(x="mpg", y="weight", title = "Plot B")
g2 <- ggplot(mtcars, aes(x=mpg, y=wt))+geom_point(color=factor(mtcars$am)) +labs(x="mpg", y="weight", title = "Plot B")
g2
g2 <- ggplot(mtcars, aes(x=mpg, y=wt))+geom_point() +labs(x="mpg", y="weight", title = "Plot B")
g2
g2 <- ggplot(mtcars, aes(x=mpg, y=wt, color=am))+geom_point() +labs(x="mpg", y="weight", title = "Plot B")
g2
g2 <- ggplot(mtcars, aes(x=mpg, y=wt, color=am))+geom_point() +labs(x="mpg", y="weight", title = "Plot B", color="Transmission Type")
g2
table(mtcars$cyl, mtcars$am)
install.packages("grid")
install.packages("grid")
install.packages("grid")
library(grid)
gC1 <- ggplot(mtcars, aes(x=mpg, y=hp, color=am)) + geom_point() +labs(x="mpg", y="horsepower", title = "Plot C1", color = "Transmission Type")
library(ggplot2)
gC1 <- ggplot(mtcars, aes(x=mpg, y=hp, color=am)) + geom_point() +labs(x="mpg", y="horsepower", title = "Plot C1", color = "Transmission Type")
gC1 <- ggplot(mtcars, aes(x=mpg, y=hp, color=am)) + geom_point() +labs(x="mpg", y="horsepower", title = "Plot C1", color = "Transmission Type")
grid.arrange(gC1, gC2)
library(gridExtra)
install.packages('gridExtra')
library(gridExtra)
grid.arrange(gC1, gC2)
gC1 <- ggplot(mtcars, aes(x=mpg, y=hp, color=am)) + geom_point() +labs(x="mpg", y="horsepower", title = "Plot C1", color = "Transmission Type")
gC2 <- ggplot(mtcars, aes(x=mpg, y=log(hp), color=am)) + geom_point() +labs(x="mpg", y="log(horsepower)", title = "Plot C2", color = "Transmission Type")
grid.arrange(gC1, gC2)
?grid.arrange
grid.arrange(gC1, gC2, as.table=TRUE)
grid.arrange(gC1, gC2)
?plot
str(mtcars)
?mtcars
install.packages("xtable")
library(xtable)
?xtable
library(datasets)
install.packages("devtools")
library(devtools)
devtools::install_github("rstudio/rmarkdown")
xtable(anova(mpg1, mpg2, mpg3, mpg4))
?fig.pos
getwd()
setwd("~/Documents/Coursera courses//Data Science Specialization//Reproducible Research//RepData_PeerAssessment1")
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date)
activity$interval <- as.factor(activity$interval)
daily <- aggregate(steps~date, data=activity, sum)
hist(daily$steps, breaks=50)
summary(daily$steps)
library(ggplot2)
intervals <- aggregate(steps~interval, data=activity, mean)
head(intervals)
i <- ggplot(intervals, aes(x=interval, y=steps)) + geom_line()
i
i <- ggplot(intervals, aes(x=interval, y=steps)) + geom_line(stat="identity")
i
i <- ggplot(intervals, aes(x=factor(interval), y=steps)) + geom_line()
i
str(intervals)
i <- ggplot(intervals, aes(x=interval, y=steps)) + geom_line(aes(group=steps))
i
i <- ggplot(intervals, aes(x=interval, y=steps)) + geom_line(aes(group=interval))
i
i <- ggplot(intervals, aes(x=interval, y=steps, group=1)) + geom_line()
1
i
which.max(intervals$steps)
intervals[104, ]
summary(intervals$steps)
intervals[which.max(intervals$steps),]
summary(activity)
NAS <- activity[is.na(activity),]
head(NAS)
ii <- intervals$steps
head(ii)
head(intervals)
a <- read.csv("activity.csv")
head(a)
a[1,1] <- ii[1]
head(a)
exp <- merge(NAS, ii, by=interval)
exp <- merge(NAS, intervals, by=interval)
?merge
exp <- merge(NAS, intervals, by.x=interval, all.x=TRUE)
exp <- merge(NAS, intervals, by=intervals$interval, all.x=TRUE)
exp <- merge(NAS, intervals)
head(intervals)
head(NAS)
tail(NAS)
summary(NAS)
View(NAS)
str(NAS)
index <- row.names(NAS)
tail(index)
exp2 <- NAS[, -1]
head(exp2)
tail(exp2)
exp3 <- merge(exp2, intervals)
head(exp3)
tail(exp3)
which.max(NAS$interval)
NAS[288,]
which.max(exp3$interval)
exp3[1529,]
x2 <- NAS[,-1]
x3 <- merge(exp2, intervals, sort=FALSE)
head(x3)
tail(x3)
?is.equal
?equal
identical(index, row.names(x3))
?identical
?all.equal
?order
?reorder
?sort
xx <- x3[order(row.names(x3)),]
head(xx)
head(NAS)
xx <- x3[order(row.names(x3), decreasing=FALSE),]
head(xx)
index[100]
index[101]
index
index[1820]
NAS[12764,]
head(NAS)
tail(NAS)
activity[17563,]
x3names <- row.names(x3)
/sort
?sort
x3n <- sort(x3names, decreasing=FALSE)
all.equal(x3n, index)
head(x3n)
head(x3)
weekdays()
?weekdays()
x2$index <- index
head(x2)
tail(x2)
length(index)
index[2300]
head(x3)
xo <- order(x3, date, interval)
?order
xo <- x3[order(x3, date, interval),]
xo <- x3[order(x3, date, x3$interval),]
xo <- x3[order(x3, x3$date, x3$interval),]
x0 <- x3[order(x3[,2], x3[,1]),]
head(x0)
tail(x0)
x0$index <- index
head(x0)
x <- NAS[,-1]
x2 <- merge(x, intervals)
x3 <- x2[order(x2[,2], x2[,1]),]
x3$index <- index
tail(x3)
for(i in length(index)){
activity$steps[index[i],] <- x3$[index[i], 3]
}
for(i in length(index)){
activity$steps[index[i],] <- x3$steps[index[i], 3]
}
for(i in length(index)){
activity$steps[index[i],] <- x3[index$steps[i],]
}
for(i in length(index)){
activity$steps[index[i],] <- x3$steps[index[i],]
}
x3$steps[index[7], ]
activity$steps[index[500],]
activity$steps[(index[500]),]
?lapply
setwd("~/Documents/Datafiles/GSS/GSS_spss")
library(foreign)
GSS <- read.spss("GSS7212_R6.sav")
str(GSS)
?read.sav
?read.spss
rm(GSS)
GSS <- read.spss("GSS7212_R6.sav", to.data.fram=TRUE)
str(GSS)
View(GSS)
head(intervals)
head(x3)
for(i in seq_along(index)){
a[i,1] <- x3[i,3]
}
head(a)
head(intervals)
index[220:230]
index[1000:1010]
a[9928:9938]
a[9928:9938,]
length(index)
a2 <- read.csv("activity.csv")
setwd("~/Documents/Coursera courses/Data Science Specialization/Reproducible Research/RepData_PeerAssessment1")
a2 <- read.csv("activity.csv")
index <- as.numeric(index)
for(i in seq_along(index)){
a2[i,1] <- x3[i,3]
}
a2[9928:9938,]
head(a2)
index{1:20]}
index[1:20]
index[20:40]
index[40:60]
index[60:80]
head(activity)
rm(a)
rm(a2)
a <- read.csv("activity.csv")
library(plyr)
?ddply
?runif
?ddply
?which
which(LETTERS == "R")
which((1:12)%%2 ==0)
dat <- read.table(text = "id    taxa        length  width
101   collembola  2.1     0.9
102   mite        0.9     0.7
103   mite        1.1     0.8
104   collembola  NA      NA
105   collembola  1.5     0.5
106   mite        NA      NA", header=TRUE)
dat
mpute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
dat2 <- ddply(dat, ~ taxa, transform, length = impute.mean(length),
width = impute.mean(width))
dat2
which(sapply(dat, is.numeric()))
which(sapply(dat, is.numeric))
whichexp <- which(sapply(activity, is.numeric))
head(whichexp)
head(activity)
imputed.means <- <- aggregate(steps~interval, data=activity, mean)
imputed.means <- aggregate(steps~interval, data=activity, mean)
ai <- merge(a, imputed.means, by=interval)
ai <- merge(a, imputed.means, by=a$interval)
?merge
ai <- merge(a, imputed.means, by.x=interval, by.y=interval)
View(imputed.means)
colnames(imputed.means) <- c("interval", "imputed.steps")
ai <- merge(a, imputed.means)
head(ai)
ai$steps[is.na(ai$steps)] <- ai$imputed.steps[is.na(ai$steps)]
head(ai)
ai <- ai[order(ai[,3], ai[,1]),]
head(ai)
index[1000:1010]
ai[9928:9938,]
testing <- as.numeric(1:17568)
test <- testing[-index]
head(test)
ai[289:299,]
activity[289:299,]
test[1500:1510]
activity[1788:1798,]
ai[1788:1798,]
ai[-4]
head(ai)
ai <- ai[-4]
head(ai)
?weekdays
daily2 <- aggregate(steps~date, data=ai, sum)
hist(daily2$steps, breaks=50)
summary(daily2)
summary(daily2$steps)
summary(daily$steps)
ai$day <- weekdays(ai$date)
ai$day <- weekdays(as.Date(ai$date))
head(ai)
day <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
day.type <- c(rep("Weekday", 5), rep("Weekend", 2))
d <- data.frame(day=day, day.type=day.type)
d
ai2 <- merge(ai, d)
head(ai2)
ai2$day.type <- as.factor(ai2$day.type)
i
d <- ggplot(ai2, aes(x=interval, y=steps, group=1)) + geom_line() + facets_grid(day.type~.)
d <- ggplot(ai2, aes(x=interval, y=steps, group=1)) + geom_line() + facet_grid(day.type~.)
d
rm(ai)
head(intervals)
colnames(intervals) <- c("interval", "imputed.steps")
ai <- merge(activity, intervals)
ai$steps[is.na(ai$steps)] <- ai$imputed.steps[is.na(ai$steps)]
ai <- ai[order(ai[,3], ai[,1]),]
head(ai)
ai$day <- weekdays(as.Date(ai$date))
day <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
day.type <- c(rep("Weekday", 5), rep("Weekend", 2))
d <- data.frame(day=day, day.type=day.type)
ai2 <- merge(ai, d)
ai2$day.type <- as.factor(ai2$day.type)
head(ai2)
rm(d)
d <- ggplot(ai2, aes(x=interval, y=imputed.steps, group=1)) +geom_line() + facet_grid(day.type~.)
d
?aggregate
ai3 <- aggregate(steps~day.type+interval, data=ai2, mean)
head(ai3)
ai3$day.type <- as.factor(ai3$day.type)
ai3$interval <- as.factor(ai3$interval)
class(ai3)
tm(d)
rm(d)
d <- ggplot(ai3, aes(x=interval, y=steps, group=1)) +geom_line() + facet_grid(day.type~.)
d
max(ai3$steps[ai3$day.type=="Weekday"])
which.max(ai3$steps[ai3$day.type=="Weekday"])
ai3[which.max(ai3$steps[ai3$day.type=="Weekday"])]
ai3[which.max(ai3$steps[ai3$day.type=="Weekday"]),]
ai3[which.max(ai3$steps[ai3$day.type=="Weekend"]),]
max(ai3$steps[ai3$day.type=="Weekend"])
?which.max
ai3[ai3$steps==166.6392,]
which.max(ai3$steps)
ai3[207,]
which.max(ai3$steps[ai3$day.type=="Weekday",])
awd <- ai3[ai3$day.type=="Weekday"]
awd <- ai3[ai3$day.type=="Weekday",]
head(awd)
s <- ai3$steps[ai3$day.type=="Weekday"]
s
which.max(s)
s[104]
ai3[104,]
ai3$interval[which.max(ai3$steps[ai3$day.type=="Weekend"]),]
ai3$interval[which.max(ai3$steps[ai3$day.type=="Weekend"])]
ai3$interval[ai3$steps == max(ai3$steps[ai3$day.type=="Weekend"])]
ai3$interval[ai3$steps == max(ai3$steps[ai3$day.type=="Weekday"])]
d
rm(list=ls())
activity <- read.csv("activity.csv")
daily <- aggregate(steps~date, data=activity, sum)
getwd()
knit2html("PA1_template.Rmd")
